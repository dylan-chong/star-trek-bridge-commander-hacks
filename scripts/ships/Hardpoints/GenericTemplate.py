# This file is commented out because it is not used anywhere that I can see,
# and when it is run by the multiplayer script checksum, it triggers module not found errors
# 
# # File: G (Python 1.5)
# 
# import App
# import GlobalPropertyTemplates
# Hull = App.HullProperty_Create('Hull')
# Hull.SetMaxCondition(1000.0)
# Hull.SetCritical(1)
# Hull.SetTargetable(1)
# Hull.SetPrimary(1)
# Hull.SetPosition(0.0, 0.0, 0.0)
# Hull.SetPosition2D(0.0, 0.0)
# Hull.SetRepairComplexity(1.0)
# Hull.SetDisabledPercentage(0.5)
# Hull.SetRadius(0.25)
# App.g_kModelPropertyManager.RegisterLocalTemplate(Hull)
# ImpulseEngineSystem = App.ImpulseEngineProperty_Create('Impulse Engine System')
# ImpulseEngineSystem.SetMaxCondition(200.0)
# ImpulseEngineSystem.SetCritical(0)
# ImpulseEngineSystem.SetTargetable(1)
# ImpulseEngineSystem.SetPrimary(1)
# ImpulseEngineSystem.SetPosition(0.0, 0.0, 0.0)
# ImpulseEngineSystem.SetPosition2D(0.0, 0.0)
# ImpulseEngineSystem.SetRepairComplexity(1.0)
# ImpulseEngineSystem.SetDisabledPercentage(0.5)
# ImpulseEngineSystem.SetRadius(0.25)
# ImpulseEngineSystem.SetNormalPowerPerSecond(1.0)
# ImpulseEngineSystem.SetMaxAccel(20.0)
# ImpulseEngineSystem.SetMaxAngularAccel(0.1)
# ImpulseEngineSystem.SetMaxAngularVelocity(0.25)
# ImpulseEngineSystem.SetMaxSpeed(20.0)
# App.g_kModelPropertyManager.RegisterLocalTemplate(ImpulseEngineSystem)
# PowerPlant = App.PowerProperty_Create('Power Plant')
# PowerPlant.SetMaxCondition(200.0)
# PowerPlant.SetCritical(0)
# PowerPlant.SetTargetable(1)
# PowerPlant.SetPrimary(1)
# PowerPlant.SetPosition(0.0, 0.0, 0.0)
# PowerPlant.SetPosition2D(0.0, 0.0)
# PowerPlant.SetRepairComplexity(1.0)
# PowerPlant.SetDisabledPercentage(0.5)
# PowerPlant.SetRadius(0.25)
# PowerPlant.SetMainBatteryLimit(70000.0)
# PowerPlant.SetBackupBatteryLimit(10000.0)
# PowerPlant.SetMainConduitCapacity(400.0)
# PowerPlant.SetBackupConduitCapacity(200.0)
# PowerPlant.SetPowerOutput(100.0)
# App.g_kModelPropertyManager.RegisterLocalTemplate(PowerPlant)
# RepairSystem = App.RepairSubsystemProperty_Create('Repair System')
# RepairSystem.SetMaxCondition(200.0)
# RepairSystem.SetCritical(0)
# RepairSystem.SetTargetable(1)
# RepairSystem.SetPrimary(1)
# RepairSystem.SetPosition(0.0, 0.0, 0.0)
# RepairSystem.SetPosition2D(0.0, 0.0)
# RepairSystem.SetRepairComplexity(1.0)
# RepairSystem.SetDisabledPercentage(0.5)
# RepairSystem.SetRadius(0.25)
# RepairSystem.SetNormalPowerPerSecond(1.0)
# RepairSystem.SetMaxRepairPoints(15.0)
# RepairSystem.SetNumRepairTeams(3)
# App.g_kModelPropertyManager.RegisterLocalTemplate(RepairSystem)
# SensorArray = App.SensorProperty_Create('Sensor Array')
# SensorArray.SetMaxCondition(200.0)
# SensorArray.SetCritical(0)
# SensorArray.SetTargetable(1)
# SensorArray.SetPrimary(1)
# SensorArray.SetPosition(0.0, 0.0, 0.0)
# SensorArray.SetPosition2D(0.0, 0.0)
# SensorArray.SetRepairComplexity(1.0)
# SensorArray.SetDisabledPercentage(0.5)
# SensorArray.SetRadius(0.25)
# SensorArray.SetNormalPowerPerSecond(1.0)
# SensorArray.SetBaseSensorRange(1000.0)
# App.g_kModelPropertyManager.RegisterLocalTemplate(SensorArray)
# ShieldGenerator = App.ShieldProperty_Create('Shield Generator')
# ShieldGenerator.SetMaxCondition(200.0)
# ShieldGenerator.SetCritical(0)
# ShieldGenerator.SetTargetable(1)
# ShieldGenerator.SetPrimary(1)
# ShieldGenerator.SetPosition(0.0, 0.0, 0.0)
# ShieldGenerator.SetPosition2D(0.0, 0.0)
# ShieldGenerator.SetRepairComplexity(1.0)
# ShieldGenerator.SetDisabledPercentage(0.5)
# ShieldGenerator.SetRadius(0.25)
# ShieldGenerator.SetNormalPowerPerSecond(1.0)
# ShieldGeneratorShieldGlowColor = App.TGColorA()
# ShieldGeneratorShieldGlowColor.SetRGBA(0.0, 1.0, 1.0, 1.0)
# ShieldGenerator.SetShieldGlowColor(ShieldGeneratorShieldGlowColor)
# ShieldGenerator.SetShieldGlowDecay(1.0)
# ShieldGenerator.SetMaxShields(ShieldGenerator.FRONT_SHIELDS, 1000.0)
# ShieldGenerator.SetMaxShields(ShieldGenerator.REAR_SHIELDS, 1000.0)
# ShieldGenerator.SetMaxShields(ShieldGenerator.TOP_SHIELDS, 1000.0)
# ShieldGenerator.SetMaxShields(ShieldGenerator.BOTTOM_SHIELDS, 1000.0)
# ShieldGenerator.SetMaxShields(ShieldGenerator.LEFT_SHIELDS, 1000.0)
# ShieldGenerator.SetMaxShields(ShieldGenerator.RIGHT_SHIELDS, 1000.0)
# ShieldGenerator.SetShieldChargePerSecond(ShieldGenerator.FRONT_SHIELDS, 1.0)
# ShieldGenerator.SetShieldChargePerSecond(ShieldGenerator.REAR_SHIELDS, 1.0)
# ShieldGenerator.SetShieldChargePerSecond(ShieldGenerator.TOP_SHIELDS, 1.0)
# ShieldGenerator.SetShieldChargePerSecond(ShieldGenerator.BOTTOM_SHIELDS, 1.0)
# ShieldGenerator.SetShieldChargePerSecond(ShieldGenerator.LEFT_SHIELDS, 1.0)
# ShieldGenerator.SetShieldChargePerSecond(ShieldGenerator.RIGHT_SHIELDS, 1.0)
# App.g_kModelPropertyManager.RegisterLocalTemplate(ShieldGenerator)
# Ship = App.ShipProperty_Create('Ship')
# Ship.SetGenus(1)
# Ship.SetSpecies(1)
# Ship.SetMass(100.0)
# Ship.SetRotationalInertia(10000.0)
# Ship.SetShipName('BlahBlah')
# Ship.SetModelFilename('data/Models/Ships/BlahBlah.nif')
# Ship.SetDamageResolution(15.0)
# Ship.SetAffiliation(0)
# Ship.SetStationary(0)
# Ship.SetAIString('NonFedAttack')
# Ship.SetDeathExplosionSound('g_lsDeathExplosions')
# App.g_kModelPropertyManager.RegisterLocalTemplate(Ship)
# WarpEngineSystem = App.WarpEngineProperty_Create('Warp Engine System')
# WarpEngineSystem.SetMaxCondition(200.0)
# WarpEngineSystem.SetCritical(0)
# WarpEngineSystem.SetTargetable(1)
# WarpEngineSystem.SetPrimary(1)
# WarpEngineSystem.SetPosition(0.0, 0.0, 0.0)
# WarpEngineSystem.SetPosition2D(0.0, 0.0)
# WarpEngineSystem.SetRepairComplexity(1.0)
# WarpEngineSystem.SetDisabledPercentage(0.5)
# WarpEngineSystem.SetRadius(0.25)
# WarpEngineSystem.SetNormalPowerPerSecond(1.0)
# App.g_kModelPropertyManager.RegisterLocalTemplate(WarpEngineSystem)
# PhaserSystem = App.WeaponSystemProperty_Create('Phaser System')
# PhaserSystem.SetMaxCondition(200.0)
# PhaserSystem.SetCritical(0)
# PhaserSystem.SetTargetable(1)
# PhaserSystem.SetPrimary(1)
# PhaserSystem.SetPosition(0.0, 0.0, 0.0)
# PhaserSystem.SetPosition2D(0.0, 0.0)
# PhaserSystem.SetRepairComplexity(1.0)
# PhaserSystem.SetDisabledPercentage(0.5)
# PhaserSystem.SetRadius(0.25)
# PhaserSystem.SetNormalPowerPerSecond(1.0)
# PhaserSystem.SetWeaponSystemType(PhaserSystem.WST_PHASER)
# PhaserSystem.SetSingleFire(1)
# PhaserSystem.SetAimedWeapon(0)
# kFiringChainString = App.TGString()
# kFiringChainString.SetString('')
# PhaserSystem.SetFiringChainString(kFiringChainString)
# App.g_kModelPropertyManager.RegisterLocalTemplate(PhaserSystem)
# Torpedoes = App.TorpedoSystemProperty_Create('Torpedoes')
# Torpedoes.SetMaxCondition(200.0)
# Torpedoes.SetCritical(0)
# Torpedoes.SetTargetable(1)
# Torpedoes.SetPrimary(1)
# Torpedoes.SetPosition(0.0, 0.0, 0.0)
# Torpedoes.SetPosition2D(0.0, 0.0)
# Torpedoes.SetRepairComplexity(1.0)
# Torpedoes.SetDisabledPercentage(0.5)
# Torpedoes.SetRadius(0.25)
# Torpedoes.SetNormalPowerPerSecond(1.0)
# Torpedoes.SetWeaponSystemType(Torpedoes.WST_TORPEDO)
# Torpedoes.SetSingleFire(1)
# Torpedoes.SetAimedWeapon(0)
# kFiringChainString = App.TGString()
# kFiringChainString.SetString('')
# Torpedoes.SetFiringChainString(kFiringChainString)
# Torpedoes.SetMaxTorpedoes(0, 400)
# Torpedoes.SetTorpedoScript(0, 'Tactical.Projectiles.PhotonTorpedo')
# Torpedoes.SetMaxTorpedoes(1, 400)
# Torpedoes.SetTorpedoScript(1, 'Tactical.Projectiles.QuantumTorpedo')
# Torpedoes.SetMaxTorpedoes(2, 400)
# Torpedoes.SetTorpedoScript(2, 'Tactical.Projectiles.QuantumTorpedo')
# Torpedoes.SetMaxTorpedoes(3, 400)
# Torpedoes.SetTorpedoScript(3, 'Tactical.Projectiles.QuantumTorpedo')
# Torpedoes.SetNumAmmoTypes(1)
# App.g_kModelPropertyManager.RegisterLocalTemplate(Torpedoes)
# TractorBeamSystem = App.WeaponSystemProperty_Create('Tractor Beam System')
# TractorBeamSystem.SetMaxCondition(200.0)
# TractorBeamSystem.SetCritical(0)
# TractorBeamSystem.SetTargetable(1)
# TractorBeamSystem.SetPrimary(1)
# TractorBeamSystem.SetPosition(0.0, 0.0, 0.0)
# TractorBeamSystem.SetPosition2D(0.0, 0.0)
# TractorBeamSystem.SetRepairComplexity(1.0)
# TractorBeamSystem.SetDisabledPercentage(0.5)
# TractorBeamSystem.SetRadius(0.25)
# TractorBeamSystem.SetNormalPowerPerSecond(1.0)
# TractorBeamSystem.SetWeaponSystemType(TractorBeamSystem.WST_TRACTOR)
# TractorBeamSystem.SetSingleFire(1)
# TractorBeamSystem.SetAimedWeapon(0)
# kFiringChainString = App.TGString()
# kFiringChainString.SetString('')
# TractorBeamSystem.SetFiringChainString(kFiringChainString)
# App.g_kModelPropertyManager.RegisterLocalTemplate(TractorBeamSystem)
# PulseWeaponSystem = App.WeaponSystemProperty_Create('Pulse Weapon System')
# PulseWeaponSystem.SetMaxCondition(200.0)
# PulseWeaponSystem.SetCritical(0)
# PulseWeaponSystem.SetTargetable(1)
# PulseWeaponSystem.SetPrimary(1)
# PulseWeaponSystem.SetPosition(0.0, 0.0, 0.0)
# PulseWeaponSystem.SetPosition2D(0.0, 0.0)
# PulseWeaponSystem.SetRepairComplexity(1.0)
# PulseWeaponSystem.SetDisabledPercentage(0.5)
# PulseWeaponSystem.SetRadius(0.25)
# PulseWeaponSystem.SetNormalPowerPerSecond(1.0)
# PulseWeaponSystem.SetWeaponSystemType(PulseWeaponSystem.WST_PULSE)
# PulseWeaponSystem.SetSingleFire(1)
# PulseWeaponSystem.SetAimedWeapon(0)
# kFiringChainString = App.TGString()
# kFiringChainString.SetString('')
# PulseWeaponSystem.SetFiringChainString(kFiringChainString)
# App.g_kModelPropertyManager.RegisterLocalTemplate(PulseWeaponSystem)
# CloakingSystem = App.CloakingSubsystemProperty_Create('Cloaking System')
# CloakingSystem.SetMaxCondition(200.0)
# CloakingSystem.SetCritical(0)
# CloakingSystem.SetTargetable(1)
# CloakingSystem.SetPrimary(1)
# CloakingSystem.SetPosition(0.0, 0.0, 0.0)
# CloakingSystem.SetPosition2D(0.0, 0.0)
# CloakingSystem.SetRepairComplexity(1.0)
# CloakingSystem.SetDisabledPercentage(0.5)
# CloakingSystem.SetRadius(0.25)
# CloakingSystem.SetNormalPowerPerSecond(1.0)
# CloakingSystem.SetCloakStrength(0.0)
# App.g_kModelPropertyManager.RegisterLocalTemplate(CloakingSystem)
# ImpulseEngine = App.EngineProperty_Create('Impulse Engine')
# ImpulseEngine.SetMaxCondition(200.0)
# ImpulseEngine.SetCritical(0)
# ImpulseEngine.SetTargetable(1)
# ImpulseEngine.SetPrimary(1)
# ImpulseEngine.SetPosition(0.0, 0.0, 0.0)
# ImpulseEngine.SetPosition2D(0.0, 0.0)
# ImpulseEngine.SetRepairComplexity(1.0)
# ImpulseEngine.SetDisabledPercentage(0.5)
# ImpulseEngine.SetRadius(0.25)
# ImpulseEngine.SetEngineType(ImpulseEngine.EP_IMPULSE)
# App.g_kModelPropertyManager.RegisterLocalTemplate(ImpulseEngine)
# WarpEngine = App.EngineProperty_Create('Warp Engine')
# WarpEngine.SetMaxCondition(200.0)
# WarpEngine.SetCritical(0)
# WarpEngine.SetTargetable(1)
# WarpEngine.SetPrimary(1)
# WarpEngine.SetPosition(0.0, 0.0, 0.0)
# WarpEngine.SetPosition2D(0.0, 0.0)
# WarpEngine.SetRepairComplexity(1.0)
# WarpEngine.SetDisabledPercentage(0.5)
# WarpEngine.SetRadius(0.25)
# WarpEngine.SetEngineType(WarpEngine.EP_WARP)
# App.g_kModelPropertyManager.RegisterLocalTemplate(WarpEngine)
# Phaser = App.PhaserProperty_Create('Phaser')
# Phaser.SetMaxCondition(200.0)
# Phaser.SetCritical(0)
# Phaser.SetTargetable(1)
# Phaser.SetPrimary(1)
# Phaser.SetPosition(0.0, 0.0, 0.0)
# Phaser.SetPosition2D(0.0, 0.0)
# Phaser.SetRepairComplexity(1.0)
# Phaser.SetDisabledPercentage(0.5)
# Phaser.SetRadius(0.25)
# Phaser.SetDumbfire(0)
# Phaser.SetWeaponID(0)
# Phaser.SetGroups(0)
# Phaser.SetDamageRadiusFactor(0.25)
# Phaser.SetIconNum(0)
# Phaser.SetIconPositionX(0.0)
# Phaser.SetIconPositionY(0.0)
# Phaser.SetIconAboveShip(1)
# Phaser.SetFireSound('Enterprise D Phaser')
# Phaser.SetMaxCharge(5.0)
# Phaser.SetMaxDamage(25.0)
# Phaser.SetMaxDamageDistance(100.0)
# Phaser.SetMinFiringCharge(3.0)
# Phaser.SetNormalDischargeRate(1.0)
# Phaser.SetRechargeRate(0.3)
# Phaser.SetIndicatorIconNum(0)
# Phaser.SetIndicatorIconPositionX(0.0)
# Phaser.SetIndicatorIconPositionY(0.0)
# PhaserForward = App.TGPoint3()
# PhaserForward.SetXYZ(0.0, 1.0, 0.0)
# PhaserUp = App.TGPoint3()
# PhaserUp.SetXYZ(0.0, 0.0, 1.0)
# Phaser.SetOrientation(PhaserForward, PhaserUp)
# Phaser.SetWidth(1.8)
# Phaser.SetLength(1.4)
# Phaser.SetArcWidthAngles(-1.963495, 1.963495)
# Phaser.SetArcHeightAngles(-0.098175, 2.356194)
# Phaser.SetPhaserTextureStart(0)
# Phaser.SetPhaserTextureEnd(0)
# Phaser.SetPhaserWidth(0.3)
# kColor = App.TGColorA()
# kColor.SetRGBA(1.0, 0.172549, 0.007843, 1.0)
# Phaser.SetOuterShellColor(kColor)
# kColor.SetRGBA(1.0, 0.172549, 0.007843, 1.0)
# Phaser.SetInnerShellColor(kColor)
# kColor.SetRGBA(0.992157, 0.835294, 0.639216, 1.0)
# Phaser.SetOuterCoreColor(kColor)
# kColor.SetRGBA(0.992157, 0.901961, 0.862745, 1.0)
# Phaser.SetInnerCoreColor(kColor)
# Phaser.SetNumSides(6)
# Phaser.SetMainRadius(0.15)
# Phaser.SetTaperRadius(0.01)
# Phaser.SetCoreScale(0.5)
# Phaser.SetTaperRatio(0.25)
# Phaser.SetTaperMinLength(5.0)
# Phaser.SetTaperMaxLength(30.0)
# Phaser.SetLengthTextureTilePerUnit(0.5)
# Phaser.SetPerimeterTile(1.0)
# Phaser.SetTextureSpeed(2.5)
# Phaser.SetTextureName('data/phaser.tga')
# App.g_kModelPropertyManager.RegisterLocalTemplate(Phaser)
# TorpedoTube = App.TorpedoTubeProperty_Create('Torpedo Tube')
# TorpedoTube.SetMaxCondition(200.0)
# TorpedoTube.SetCritical(0)
# TorpedoTube.SetTargetable(1)
# TorpedoTube.SetPrimary(1)
# TorpedoTube.SetPosition(0.0, 0.0, 0.0)
# TorpedoTube.SetPosition2D(0.0, 0.0)
# TorpedoTube.SetRepairComplexity(1.0)
# TorpedoTube.SetDisabledPercentage(0.5)
# TorpedoTube.SetRadius(0.25)
# TorpedoTube.SetDumbfire(1)
# TorpedoTube.SetWeaponID(0)
# TorpedoTube.SetGroups(0)
# TorpedoTube.SetDamageRadiusFactor(0.6)
# TorpedoTube.SetIconNum(0)
# TorpedoTube.SetIconPositionX(0.0)
# TorpedoTube.SetIconPositionY(0.0)
# TorpedoTube.SetIconAboveShip(1)
# TorpedoTube.SetImmediateDelay(0.25)
# TorpedoTube.SetReloadDelay(5.0)
# TorpedoTube.SetMaxReady(1)
# TorpedoTubeDirection = App.TGPoint3()
# TorpedoTubeDirection.SetXYZ(0.0, 1.0, 0.0)
# TorpedoTube.SetDirection(TorpedoTubeDirection)
# TorpedoTubeRight = App.TGPoint3()
# TorpedoTubeRight.SetXYZ(1.0, 0.0, 0.0)
# TorpedoTube.SetRight(TorpedoTubeRight)
# App.g_kModelPropertyManager.RegisterLocalTemplate(TorpedoTube)
# TractorBeam = App.TractorBeamProperty_Create('Tractor Beam')
# TractorBeam.SetMaxCondition(200.0)
# TractorBeam.SetCritical(0)
# TractorBeam.SetTargetable(1)
# TractorBeam.SetPrimary(1)
# TractorBeam.SetPosition(0.0, 0.0, 0.0)
# TractorBeam.SetPosition2D(0.0, 0.0)
# TractorBeam.SetRepairComplexity(1.0)
# TractorBeam.SetDisabledPercentage(0.5)
# TractorBeam.SetRadius(0.25)
# TractorBeam.SetDumbfire(0)
# TractorBeam.SetWeaponID(0)
# TractorBeam.SetGroups(0)
# TractorBeam.SetDamageRadiusFactor(0.3)
# TractorBeam.SetIconNum(0)
# TractorBeam.SetIconPositionX(0.0)
# TractorBeam.SetIconPositionY(0.0)
# TractorBeam.SetIconAboveShip(1)
# TractorBeam.SetFireSound('Tractor Beam')
# TractorBeam.SetMaxCharge(5.0)
# TractorBeam.SetMaxDamage(1000.0)
# TractorBeam.SetMaxDamageDistance(100.0)
# TractorBeam.SetMinFiringCharge(3.0)
# TractorBeam.SetNormalDischargeRate(1.0)
# TractorBeam.SetRechargeRate(0.3)
# TractorBeam.SetIndicatorIconNum(0)
# TractorBeam.SetIndicatorIconPositionX(0.0)
# TractorBeam.SetIndicatorIconPositionY(0.0)
# TractorBeamForward = App.TGPoint3()
# TractorBeamForward.SetXYZ(0.0, 1.0, 0.0)
# TractorBeamUp = App.TGPoint3()
# TractorBeamUp.SetXYZ(0.0, 0.0, 1.0)
# TractorBeam.SetOrientation(TractorBeamForward, TractorBeamUp)
# TractorBeam.SetArcWidthAngles(-1.963495, 1.963495)
# TractorBeam.SetArcHeightAngles(-0.098175, 2.356194)
# TractorBeam.SetTractorBeamWidth(0.3)
# TractorBeam.SetTextureStart(0)
# TractorBeam.SetTextureEnd(0)
# App.g_kModelPropertyManager.RegisterLocalTemplate(TractorBeam)
# PulseWeapon = App.PulseWeaponProperty_Create('Pulse Weapon')
# PulseWeapon.SetMaxCondition(200.0)
# PulseWeapon.SetCritical(0)
# PulseWeapon.SetTargetable(1)
# PulseWeapon.SetPrimary(1)
# PulseWeapon.SetPosition(0.0, 0.0, 0.0)
# PulseWeapon.SetPosition2D(0.0, 0.0)
# PulseWeapon.SetRepairComplexity(1.0)
# PulseWeapon.SetDisabledPercentage(0.5)
# PulseWeapon.SetRadius(0.25)
# PulseWeapon.SetDumbfire(1)
# PulseWeapon.SetWeaponID(0)
# PulseWeapon.SetGroups(0)
# PulseWeapon.SetDamageRadiusFactor(0.3)
# PulseWeapon.SetIconNum(0)
# PulseWeapon.SetIconPositionX(0.0)
# PulseWeapon.SetIconPositionY(0.0)
# PulseWeapon.SetIconAboveShip(1)
# PulseWeapon.SetFireSound('(null)')
# PulseWeapon.SetMaxCharge(5.0)
# PulseWeapon.SetMaxDamage(25.0)
# PulseWeapon.SetMaxDamageDistance(100.0)
# PulseWeapon.SetMinFiringCharge(3.0)
# PulseWeapon.SetNormalDischargeRate(1.0)
# PulseWeapon.SetRechargeRate(0.3)
# PulseWeapon.SetIndicatorIconNum(0)
# PulseWeapon.SetIndicatorIconPositionX(0.0)
# PulseWeapon.SetIndicatorIconPositionY(0.0)
# PulseWeaponForward = App.TGPoint3()
# PulseWeaponForward.SetXYZ(0.0, 1.0, 0.0)
# PulseWeaponUp = App.TGPoint3()
# PulseWeaponUp.SetXYZ(0.0, 0.0, 1.0)
# PulseWeapon.SetOrientation(PulseWeaponForward, PulseWeaponUp)
# PulseWeapon.SetArcWidthAngles(-1.963495, 1.963495)
# PulseWeapon.SetArcHeightAngles(-0.098175, 2.356194)
# PulseWeapon.SetCooldownTime(0.3)
# PulseWeapon.SetModuleName('Tactical.Projectiles.Disruptor')
# App.g_kModelPropertyManager.RegisterLocalTemplate(PulseWeapon)
# 
# def LoadPropertySet(pObj):
#     """Sets up the object's properties."""
#     prop = App.g_kModelPropertyManager.FindByName('Hull', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Impulse Engine System', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Power Plant', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Repair System', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Sensor Array', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Shield Generator', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Ship', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Warp Engine System', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Phaser System', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Torpedoes', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Tractor Beam System', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Pulse Weapon System', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Cloaking System', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Impulse Engine', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Warp Engine', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Phaser', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Torpedo Tube', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Tractor Beam', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
#     prop = App.g_kModelPropertyManager.FindByName('Pulse Weapon', App.TGModelPropertyManager.LOCAL_TEMPLATES)
#     if prop != None:
#         pObj.AddToSet('Scene Root', prop)
#     
# 
# 